name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install
        working-directory: ./spring-boot-server

      - name: Archive jar artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: ./spring-boot-server/target/*.jar

      - name: Download jar artifact
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: ./spring-boot-server/target/

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Generate package-lock.json
        run: npm install --package-lock-only
        working-directory: ./angular-15-client

      - name: Install dependencies
        run: npm ci
        working-directory: ./angular-15-client

      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: ./angular-15-client

      - name: Build Angular app
        run: ng build --configuration production --output-path=./dist/out
        working-directory: ./angular-15-client

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./angular-15-client/dist/out/

      - name: Deploy to AWS S3
        run: |
          set -e
          {
            aws s3 sync ./angular-15-client/dist/out/ s3://springbootangularproject
            aws s3 cp ./spring-boot-server/target/*.jar s3://springbootangularproject
          } || {
            echo "AWS command failed with exit code $?"
            exit 1
          }
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-south-1'

      - name: Install Java on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo yum update -y
            sudo yum install -y java-17-amazon-corretto

      - name: Run JAR on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo -e "${{ secrets.AWS_ACCESS_KEY_ID }}\n${{ secrets.AWS_SECRET_ACCESS_KEY }}\n${{ secrets.AWS_DEFAULT_REGION }}\n\n" | aws configure
            aws s3 cp s3://springbootangularproject/spring-boot-docker.jar ~/spring-boot-server/target/
            sudo fuser -k 8080/tcp
            nohup java -jar ~/spring-boot-server/target/spring-boot-docker.jar > nohup.out 2>&1 &